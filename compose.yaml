# services:
#   db:
#     image: mysql:8.4
#     container_name: database_mysql
#     restart: unless-stopped
#     ports:
#       - "3306:3306" # <-- corrige 3306:80
#     environment:
#       MYSQL_USER: defaultUser
#       # %40 = @
#       MYSQL_PASSWORD: MySq@root170520
#       MYSQL_DATABASE: ecoride_project
#       MYSQL_ROOT_PASSWORD: RoOt@root170520
#     volumes:
#       - db-data:/var/lib/mysql # <-- volume nommé (plus rapide/stable que bind)

#   app:
#     build:
#       context: .
#       dockerfile: Dockerfile
#     container_name: app
#     working_dir: /var/www/html
#     ports:
#       - "8080:80"
#     environment:
#       DATABASE_URL: "mysql://defaultUser:MySq%40root170520@db:3306/ecoride_project?serverVersion=8.4&charset=utf8mb4"
#       APP_ENV: dev
#       APP_DEBUG: 1
#       MESSENGER_TRANSPORT_DSN: doctrine://default?auto_setup=0
#     volumes:
#       - ./apache/default.conf:/etc/apache2/sites-enabled/000-default.conf:ro
#       - ./:/var/www/html:delegated # <- enlève :ro
#       - symfony-cache:/var/www/html/var/cache
#       - symfony-logs:/var/www/html/var/log
#       - symfony-sessions:/var/www/html/var/sessions

#     tmpfs:
#       - /tmp
#     depends_on:
#       - db
#       - mongodb
#     command: >
#       bash -lc "
#         mkdir -p var/cache var/log var/sessions &&
#         chown -R www-data:www-data var/cache var/log var/sessions &&
#         exec apache2-foreground
#       "

#   phpma:
#     image: phpmyadmin:latest
#     container_name: phpmyadmin
#     environment:
#       PMA_ARBITRARY: 1
#       PMA_HOST: db
#       PMA_USER: root
#       PMA_PASSWORD: RoOt@root170520
#     ports:
#       - "8899:80"
#     depends_on:
#       - db

#   # Service utilitaire pour installer les deps
#   composer:
#     image: composer:2
#     working_dir: /app
#     volumes:
#       - ./:/app
#       - ./.docker/composer-cache:/tmp # (optionnel) cache composer
#     entrypoint: [ "composer" ]

#   mailhog:
#     image: mailhog/mailhog
#     logging:
#       driver: 'none'
#     ports:
#       - 1025:1025 #SMTP
#       - 8025:8025 #BoiteMail

#   ###> doctrine/mongodb-odm-bundle ###
#   mongodb:
#     # In production, you may want to use a managed database service
#     image: mongo:7
#     environment:
#       - MONGODB_INITDB_DATABASE=ecoride
#       # You should definitely set a root username and password in production
#       - MONGODB_INITDB_ROOT_USERNAME=root
#       - MONGODB_INITDB_ROOT_PASSWORD=root
#     volumes:
#       - mongodb_data:/data/db:rw
#       # You may use a bind-mounted host directory instead, so that it is harder to accidentally remove the volume and lose all your data!
#       # - ./docker/mongodb/data:/data/db:rw
#       ###< doctrine/mongodb-odm-bundle ###

# volumes:
#   db-data:
#   symfony-cache:
#   symfony-logs:
#   symfony-sessions:

#   ###> doctrine/mongodb-odm-bundle ###
#   mongodb_data: ###< doctrine/mongodb-odm-bundle ###


